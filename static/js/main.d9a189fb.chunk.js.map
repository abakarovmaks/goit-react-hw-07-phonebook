{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Container/Container.module.css","Components/Container/Container.js","Components/Title/Title.js","Components/Notification/Notification.js","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-operations.js","redux/phoneBook/phoneBook-selectors.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Title","CSSTransition","in","appear","timeout","classNames","unmountOnExit","Notification","message","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","clearError","axios","defaults","baseURL","operations","addContact","name","number","dispatch","a","contact","post","then","data","catch","error","deleteContact","contactId","delete","fetchContacts","get","getFilter","state","phoneBook","filter","getAllContacts","contacts","selectors","getLoading","loading","getError","getFilteredContactsList","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","setMessage","note","setState","setTimeout","handleSubmit","e","preventDefault","props","find","item","onSubmit","handleChange","target","value","this","form","input","type","placeholder","onChange","btn","Component","connect","onDelete","id","clearFilter","TransitionGroup","component","list","map","onClick","aria-label","dispatsh","onChangeFilter","phoneBookActions","length","initialState","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phoneBookReducer","devTools","process","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d9a189fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"input\":\"ContactForm_input__3dHde\",\"btn\":\"ContactForm_btn__tShh_\",\"container\":\"ContactForm_container__jcN59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2cE9S\",\"contact\":\"ContactList_contact__2n-Pp\",\"name\":\"ContactList_name__2vs56\",\"number\":\"ContactList_number__3h_Jg\",\"btn\":\"ContactList_btn__2-jnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3e1Mh\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './Title.css';\n\nconst Title = () => {\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames=\"Title-SlideIn\"\n      unmountOnExit\n    >\n      <h1 className=\"Title\">Phonebook</h1>\n    </CSSTransition>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport './Notification.css';\n\nconst Notification = ({ message }) => {\n  return (\n    <CSSTransition\n      in={message}\n      timeout={250}\n      classNames=\"Notification-fade\"\n      unmountOnExit\n    >\n      <div className=\"Overlay\">\n        <p className=\"Notification\">{message}</p>\n      </div>\n    </CSSTransition>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest'\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess'\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nexport const clearError = createAction('contacts/clearError');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './phoneBook-actions';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error)));\n\n  // try {\n  //   const { data } = axios.get('/contacts');\n\n  //   dispatch(fetchContactSuccess(data));\n  // } catch (error) {\n  //   dispatch(fetchContactError(error));\n  // }\n};\n\nconst addContact = (name, number) => async (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n\n  // const contact = { name, number };\n\n  // dispatch(addContactRequest());\n\n  // try {\n  //   const { data } = axios.post('/contacts', contact);\n\n  //   dispatch(addContactSuccess(data));\n  // } catch (error) {\n  //   dispatch(addContactError(error));\n  // }\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nconst operations = {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n\nexport default operations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = (state) => state.phoneBook.loading;\n\nconst getFilter = (state) => state.phoneBook.filter;\n\nconst getAllContacts = (state) => state.phoneBook.contacts;\n\nconst getError = (state) => state.phoneBook.error;\n\nconst getFilteredContactsList = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nconst selectors = {\n  getFilter,\n  getAllContacts,\n  getLoading,\n  getError,\n  getFilteredContactsList,\n};\n\nexport default selectors;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Notification from '../Notification/Notification';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport operations from '../../redux/phoneBook/phoneBook-operations';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    message: null,\n  };\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func,\n  };\n\n  setMessage = (note) => {\n    this.setState({ message: note });\n    setTimeout(() => {\n      this.setState({ message: null });\n    }, 2500);\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    if (name === '') {\n      this.setMessage('Enter contact name, please!');\n      return;\n    }\n    if (number === '') {\n      this.setMessage('Enter concact phone, please!');\n      return;\n    }\n    if (\n      this.props.contacts.find(\n        (item) => item.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.setMessage('Contact already exists!');\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { name, number, message } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <Notification message={message} />\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label>\n            <input\n              className={styles.input}\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              placeholder=\"Name\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <input\n              className={styles.input}\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              placeholder=\"+380\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { changeFilter } from '../../redux/phoneBook/phoneBook-actions';\nimport '../Fade/Fade.css';\nimport operations from '../../redux/phoneBook/phoneBook-operations';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\n\nconst ContactList = ({ contacts, onDelete, clearFilter }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          timeout={250}\n          classNames=\"List-slideIn\"\n          unmountOnExit\n        >\n          <li className={styles.contact}>\n            <span className={styles.name}>{name}</span>\n            <span className={styles.number}>{number}</span>\n            <button\n              className={styles.btn}\n              onClick={() => {\n                onDelete(id, clearFilter());\n              }}\n              aria-label=\"Удалить контакт\"\n            >\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  onDelete: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getFilteredContactsList(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(operations.deleteContact(id)),\n  clearFilter: () => dispatch(changeFilter('')),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n// const getFilteredContactsList = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport './Filter.css';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\n\nconst Filter = ({ value, onChangeFilter, contacts }) => {\n  return (\n    <CSSTransition\n      in={contacts.length > 1}\n      timeout={250}\n      classNames=\"Filter-fade\"\n      unmountOnExit\n    >\n      <form className=\"form\">\n        <label>\n          <span className=\"title\">Find contacts by name</span>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={value}\n            onChange={onChangeFilter}\n          />\n        </label>\n      </form>\n    </CSSTransition>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  value: selectors.getFilter(state),\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatsh) => ({\n  onChangeFilter: (e) =>\n    dispatsh(phoneBookActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Container from './Components/Container/Container';\nimport Title from './Components/Title/Title';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\n\nconst App = ({ contacts }) => {\n  return (\n    <Container>\n      <Title />\n\n      <ContactForm />\n\n      <Filter />\n\n      <CSSTransition in={contacts.length > 0} timeout={0} unmountOnExit>\n        <ContactList />\n      </CSSTransition>\n    </Container>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.phoneBook.contacts,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  changeFilter,\n  clearError,\n} from './phoneBook-actions';\n\nconst initialState = {\n  contacts: [],\n  filter: '',\n  loading: false,\n  error: null,\n};\n\nconst contacts = createReducer(initialState.contacts, {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(initialState.loading, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(initialState.error, {\n  [fetchContactError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [clearError]: () => null,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}