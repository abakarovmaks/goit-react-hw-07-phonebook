{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Container/Container.module.css","Components/Container/Container.js","Components/Title/Title.js","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-selectors.js","Components/Notification/Notification.js","redux/phoneBook/phoneBook-operations.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Title","CSSTransition","in","appear","timeout","classNames","unmountOnExit","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","clearError","getFilter","state","phoneBook","filter","getAllContacts","contacts","selectors","getLoading","loading","getError","error","getFilteredContactsList","createSelector","normalizedFilter","toLowerCase","name","includes","Notification","this","props","setTimeout","message","Component","connect","dispatch","phoneBookActions","axios","defaults","baseURL","operations","addContact","number","a","contact","post","then","data","catch","deleteContact","contactId","delete","fetchContacts","get","ContactForm","setMessage","note","setState","handleSubmit","e","preventDefault","find","item","onSubmit","handleChange","target","value","form","input","type","placeholder","onChange","btn","onDelete","id","clearFilter","TransitionGroup","component","list","map","onClick","aria-label","dispatsh","onChangeFilter","length","initialState","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phoneBookReducer","devTools","process","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ef68599a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"input\":\"ContactForm_input__3dHde\",\"btn\":\"ContactForm_btn__tShh_\",\"container\":\"ContactForm_container__jcN59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2cE9S\",\"contact\":\"ContactList_contact__2n-Pp\",\"name\":\"ContactList_name__2vs56\",\"number\":\"ContactList_number__3h_Jg\",\"btn\":\"ContactList_btn__2-jnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3e1Mh\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './Title.css';\n\nconst Title = () => {\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames=\"Title-SlideIn\"\n      unmountOnExit\n    >\n      <h1 className=\"Title\">Phonebook</h1>\n    </CSSTransition>\n  );\n};\n\nexport default Title;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest'\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess'\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nexport const clearError = createAction('contacts/clearError');\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = (state) => state.phoneBook.loading;\n\nconst getFilter = (state) => state.phoneBook.filter;\n\nconst getAllContacts = (state) => state.phoneBook.contacts;\n\nconst getError = (state) => state.phoneBook.error;\n\nconst getFilteredContactsList = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nconst selectors = {\n  getFilter,\n  getAllContacts,\n  getLoading,\n  getError,\n  getFilteredContactsList,\n};\n\nexport default selectors;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport './Notification.css';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\n\nclass Notification extends Component {\n  static propTypes = {\n    message: PropTypes.string,\n    error: PropTypes.object,\n    clearError: PropTypes.func,\n  };\n\n  componentDidMount() {\n    if (this.props.error) {\n      setTimeout(() => {\n        this.props.clearError();\n      }, 2500);\n    }\n  }\n\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.message}\n        timeout={250}\n        classNames=\"Notification-fade\"\n        unmountOnExit\n      >\n        <div className=\"Overlay\">\n          <p className=\"Notification\">{this.props.message}</p>\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  error: selectors.getError(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearError: () => dispatch(phoneBookActions.clearError()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './phoneBook-actions';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error)));\n\n  // try {\n  //   const { data } = axios.get('/contacts');\n\n  //   dispatch(fetchContactSuccess(data));\n  // } catch (error) {\n  //   dispatch(fetchContactError(error));\n  // }\n};\n\nconst addContact = (name, number) => async (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n\n  // const contact = { name, number };\n\n  // dispatch(addContactRequest());\n\n  // try {\n  //   const { data } = axios.post('/contacts', contact);\n\n  //   dispatch(addContactSuccess(data));\n  // } catch (error) {\n  //   dispatch(addContactError(error));\n  // }\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nconst operations = {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n\nexport default operations;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Notification from '../Notification/Notification';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport operations from '../../redux/phoneBook/phoneBook-operations';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    message: null,\n  };\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func,\n  };\n\n  setMessage = (note) => {\n    this.setState({ message: note });\n    setTimeout(() => {\n      this.setState({ message: null });\n    }, 2500);\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    if (name === '') {\n      this.setMessage('Enter contact name, please!');\n      return;\n    }\n    if (number === '') {\n      this.setMessage('Enter concact phone, please!');\n      return;\n    }\n    if (\n      this.props.contacts.find(\n        (item) => item.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.setMessage('Contact already exists!');\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { name, number, message } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <Notification message={message} />\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label>\n            <input\n              className={styles.input}\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              placeholder=\"Name\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <input\n              className={styles.input}\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              placeholder=\"+380\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { changeFilter } from '../../redux/phoneBook/phoneBook-actions';\nimport '../Fade/Fade.css';\nimport operations from '../../redux/phoneBook/phoneBook-operations';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\n\nconst ContactList = ({ contacts, onDelete, clearFilter }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          timeout={250}\n          classNames=\"List-slideIn\"\n          unmountOnExit\n        >\n          <li className={styles.contact}>\n            <span className={styles.name}>{name}</span>\n            <span className={styles.number}>{number}</span>\n            <button\n              className={styles.btn}\n              onClick={() => {\n                onDelete(id, clearFilter());\n              }}\n              aria-label=\"Удалить контакт\"\n            >\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  onDelete: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getFilteredContactsList(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(operations.deleteContact(id)),\n  clearFilter: () => dispatch(changeFilter('')),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n// const getFilteredContactsList = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport './Filter.css';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\n\nconst Filter = ({ value, onChangeFilter, contacts }) => {\n  return (\n    <CSSTransition\n      in={contacts.length > 1}\n      timeout={250}\n      classNames=\"Filter-fade\"\n      unmountOnExit\n    >\n      <form className=\"form\">\n        <label>\n          <span className=\"title\">Find contacts by name</span>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={value}\n            onChange={onChangeFilter}\n          />\n        </label>\n      </form>\n    </CSSTransition>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  value: selectors.getFilter(state),\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatsh) => ({\n  onChangeFilter: (e) =>\n    dispatsh(phoneBookActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Container from './Components/Container/Container';\nimport Title from './Components/Title/Title';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\n\nconst App = ({ contacts }) => {\n  return (\n    <Container>\n      <Title />\n\n      <ContactForm />\n\n      <Filter />\n\n      <CSSTransition in={contacts.length > 0} timeout={0} unmountOnExit>\n        <ContactList />\n      </CSSTransition>\n    </Container>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.phoneBook.contacts,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  changeFilter,\n  clearError,\n} from './phoneBook-actions';\n\nconst initialState = {\n  contacts: [],\n  filter: '',\n  loading: false,\n  error: null,\n};\n\nconst contacts = createReducer(initialState.contacts, {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(initialState.loading, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(initialState.error, {\n  [fetchContactError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [clearError]: () => null,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}